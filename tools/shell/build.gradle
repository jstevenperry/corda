apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'application'

description 'Corda Shell'

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

sourceSets {
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/kotlin')
        }
        resources {
            srcDir file('src/integration-test/resources')
        }
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"

    compile project(':node-api')
    compile project(':client:rpc')

    // Jackson support: serialisation to/from JSON, YAML, etc
    compile project(':client:jackson')

    // JOpt: for command line flags.
    compile "net.sf.jopt-simple:jopt-simple:$jopt_simple_version"

    // CRaSH: An embeddable monitoring and admin shell with support for adding new commands written in Groovy.
    compile("com.github.corda.crash:crash.shell:$crash_version") {
        exclude group: "org.slf4j", module: "slf4j-jdk14"
        exclude group: "org.bouncycastle"
    }

    compile("com.github.corda.crash:crash.connectors.ssh:$crash_version") {
        exclude group: "org.slf4j", module: "slf4j-jdk14"
        exclude group: "org.bouncycastle"
    }

    // JAnsi: for drawing things to the terminal in nicely coloured ways.
    compile "org.fusesource.jansi:jansi:$jansi_version"

    // Manifests: for reading stuff from the manifest file
    compile "com.jcabi:jcabi-manifests:1.1"

    // Unit testing helpers.
    testCompile "junit:junit:$junit_version"
    testCompile "org.assertj:assertj-core:${assertj_version}"
    testCompile project(':test-utils')
    testCompile project(':client:jfx')
    testCompile project(':finance')

    // Jersey for JAX-RS implementation for use in Jetty
    testCompile "org.glassfish.jersey.core:jersey-server:${jersey_version}"
    testCompile "org.glassfish.jersey.containers:jersey-container-servlet-core:${jersey_version}"
    testCompile "org.glassfish.jersey.containers:jersey-container-jetty-http:${jersey_version}"

    // Integration test helpers
    integrationTestCompile "junit:junit:$junit_version"
    integrationTestCompile "org.assertj:assertj-core:${assertj_version}"

    // Jsh: Testing SSH server
    integrationTestCompile group: 'com.jcraft', name: 'jsch', version: '0.1.54'

    integrationTestCompile project(':node-driver')
}

mainClassName = 'net.corda.shell.RemoteShellKt'

jar {
    baseName 'corda-shell'
}

processResources {
    from file("$rootDir/config/dev/log4j2.xml")
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}
